// Generated by bison.
// Report bugs to <http://sourceforge.net/p/winflexbison/tickets>.
// Home page: <http://sourceforge.net/projects/winflexbison/>.

digraph "vba2psm.y"
{
  node [fontname = courier, shape = box, colorscheme = paired6]
  edge [fontname = courier]

  0 [label="State 0\n\l  0 $accept: . input $end\l"]
  0 -> 1 [style=dashed label="input"]
  0 -> "0R1" [style=solid]
 "0R1" [label="R1", fillcolor=3, shape=diamond, style=filled]
  1 [label="State 1\n\l  0 $accept: input . $end\l  2 input: input . module_declaration\l  3      | input . subroutine_definition\l  4      | input . statement_list\l"]
  1 -> 2 [style=solid label="$end"]
  1 -> 3 [style=solid label="NUMBER"]
  1 -> 4 [style=solid label="DIM"]
  1 -> 5 [style=solid label="MODULE"]
  1 -> 6 [style=solid label="SUB"]
  1 -> 7 [style=solid label="IDENTIFIER"]
  1 -> 8 [style=solid label="FUNC"]
  1 -> 9 [style=solid label="IF"]
  1 -> 10 [style=solid label="WHILE"]
  1 -> 11 [style=solid label="'('"]
  1 -> 12 [style=dashed label="module_declaration"]
  1 -> 13 [style=dashed label="subroutine_definition"]
  1 -> 14 [style=dashed label="statement"]
  1 -> 15 [style=dashed label="statement_list"]
  1 -> 16 [style=dashed label="variable_declaration"]
  1 -> 17 [style=dashed label="expression"]
  1 -> "1R5d" [label="[$end, NUMBER, DIM, MODULE, SUB, IDENTIFIER, FUNC, IF, WHILE, '(']", style=solid]
 "1R5d" [label="R5", fillcolor=5, shape=diamond, style=filled]
  1 -> "1R9d" [label="[$end, NUMBER, DIM, MODULE, SUB, IDENTIFIER, FUNC, IF, WHILE, '(']", style=solid]
 "1R9d" [label="R9", fillcolor=5, shape=diamond, style=filled]
  1 -> "1R17d" [label="[$end, NUMBER, DIM, MODULE, SUB, IDENTIFIER, FUNC, IF, WHILE, '(']", style=solid]
 "1R17d" [label="R17", fillcolor=5, shape=diamond, style=filled]
  2 [label="State 2\n\l  0 $accept: input $end .\l"]
  2 -> "2R0" [style=solid]
 "2R0" [label="Acc", fillcolor=1, shape=diamond, style=filled]
  3 [label="State 3\n\l 29 expression: NUMBER .\l"]
  3 -> "3R29" [style=solid]
 "3R29" [label="R29", fillcolor=3, shape=diamond, style=filled]
  4 [label="State 4\n\l 19 variable_declaration: DIM . IDENTIFIER EQUAL numberlist\l 20                     | DIM . IDENTIFIER EQUAL expression\l 21                     | DIM . IDENTIFIER\l"]
  4 -> 18 [style=solid label="IDENTIFIER"]
  5 [label="State 5\n\l  6 module_declaration: MODULE . IDENTIFIER subroutine_definition END MODULE\l  7                   | MODULE . IDENTIFIER statement_list END MODULE\l  8                   | MODULE . IDENTIFIER END MODULE\l"]
  5 -> 19 [style=solid label="IDENTIFIER"]
  6 [label="State 6\n\l 10 subroutine_definition: SUB . IDENTIFIER '(' argument ')' statement_list END SUB\l 11                      | SUB . IDENTIFIER END SUB\l"]
  6 -> 20 [style=solid label="IDENTIFIER"]
  7 [label="State 7\n\l 30 expression: IDENTIFIER .\l 31           | IDENTIFIER . EQUAL expression\l 33           | IDENTIFIER . '(' expression_list ')'\l"]
  7 -> 21 [style=solid label="EQUAL"]
  7 -> 22 [style=solid label="'('"]
  7 -> "7R30d" [label="['(']", style=solid]
 "7R30d" [label="R30", fillcolor=5, shape=diamond, style=filled]
  7 -> "7R30" [style=solid]
 "7R30" [label="R30", fillcolor=3, shape=diamond, style=filled]
  8 [label="State 8\n\l 32 expression: FUNC . '(' expression_list ')'\l"]
  8 -> 23 [style=solid label="'('"]
  9 [label="State 9\n\l 12 statement: IF . expression THEN statement_list\l 13          | IF . expression THEN statement_list ELSE statement_list\l"]
  9 -> 3 [style=solid label="NUMBER"]
  9 -> 7 [style=solid label="IDENTIFIER"]
  9 -> 8 [style=solid label="FUNC"]
  9 -> 11 [style=solid label="'('"]
  9 -> 24 [style=dashed label="expression"]
  10 [label="State 10\n\l 14 statement: WHILE . expression DO statement_list\l"]
  10 -> 3 [style=solid label="NUMBER"]
  10 -> 7 [style=solid label="IDENTIFIER"]
  10 -> 8 [style=solid label="FUNC"]
  10 -> 11 [style=solid label="'('"]
  10 -> 25 [style=dashed label="expression"]
  11 [label="State 11\n\l 28 expression: '(' . expression ')'\l"]
  11 -> 3 [style=solid label="NUMBER"]
  11 -> 7 [style=solid label="IDENTIFIER"]
  11 -> 8 [style=solid label="FUNC"]
  11 -> 11 [style=solid label="'('"]
  11 -> 26 [style=dashed label="expression"]
  12 [label="State 12\n\l  2 input: input module_declaration .\l"]
  12 -> "12R2" [style=solid]
 "12R2" [label="R2", fillcolor=3, shape=diamond, style=filled]
  13 [label="State 13\n\l  3 input: input subroutine_definition .\l"]
  13 -> "13R3" [style=solid]
 "13R3" [label="R3", fillcolor=3, shape=diamond, style=filled]
  14 [label="State 14\n\l 18 statement_list: statement . statement_list\l"]
  14 -> 3 [style=solid label="NUMBER"]
  14 -> 4 [style=solid label="DIM"]
  14 -> 7 [style=solid label="IDENTIFIER"]
  14 -> 8 [style=solid label="FUNC"]
  14 -> 9 [style=solid label="IF"]
  14 -> 10 [style=solid label="WHILE"]
  14 -> 11 [style=solid label="'('"]
  14 -> 14 [style=dashed label="statement"]
  14 -> 27 [style=dashed label="statement_list"]
  14 -> 16 [style=dashed label="variable_declaration"]
  14 -> 17 [style=dashed label="expression"]
  14 -> "14R17d" [label="[NUMBER, DIM, IDENTIFIER, FUNC, IF, WHILE, '(']", style=solid]
 "14R17d" [label="R17", fillcolor=5, shape=diamond, style=filled]
  14 -> "14R17" [style=solid]
 "14R17" [label="R17", fillcolor=3, shape=diamond, style=filled]
  15 [label="State 15\n\l  4 input: input statement_list .\l"]
  15 -> "15R4" [style=solid]
 "15R4" [label="R4", fillcolor=3, shape=diamond, style=filled]
  16 [label="State 16\n\l 15 statement: variable_declaration .\l"]
  16 -> "16R15" [style=solid]
 "16R15" [label="R15", fillcolor=3, shape=diamond, style=filled]
  17 [label="State 17\n\l 16 statement: expression .\l 24 expression: expression . PLUS expression\l 25           | expression . MINUS expression\l 26           | expression . AST expression\l 27           | expression . SLASH expression\l"]
  17 -> 28 [style=solid label="PLUS"]
  17 -> 29 [style=solid label="MINUS"]
  17 -> 30 [style=solid label="SLASH"]
  17 -> 31 [style=solid label="AST"]
  17 -> "17R16" [style=solid]
 "17R16" [label="R16", fillcolor=3, shape=diamond, style=filled]
  18 [label="State 18\n\l 19 variable_declaration: DIM IDENTIFIER . EQUAL numberlist\l 20                     | DIM IDENTIFIER . EQUAL expression\l 21                     | DIM IDENTIFIER .\l"]
  18 -> 32 [style=solid label="EQUAL"]
  18 -> "18R21" [style=solid]
 "18R21" [label="R21", fillcolor=3, shape=diamond, style=filled]
  19 [label="State 19\n\l  6 module_declaration: MODULE IDENTIFIER . subroutine_definition END MODULE\l  7                   | MODULE IDENTIFIER . statement_list END MODULE\l  8                   | MODULE IDENTIFIER . END MODULE\l"]
  19 -> 3 [style=solid label="NUMBER"]
  19 -> 4 [style=solid label="DIM"]
  19 -> 33 [style=solid label="END"]
  19 -> 6 [style=solid label="SUB"]
  19 -> 7 [style=solid label="IDENTIFIER"]
  19 -> 8 [style=solid label="FUNC"]
  19 -> 9 [style=solid label="IF"]
  19 -> 10 [style=solid label="WHILE"]
  19 -> 11 [style=solid label="'('"]
  19 -> 34 [style=dashed label="subroutine_definition"]
  19 -> 14 [style=dashed label="statement"]
  19 -> 35 [style=dashed label="statement_list"]
  19 -> 16 [style=dashed label="variable_declaration"]
  19 -> 17 [style=dashed label="expression"]
  19 -> "19R9d" [label="[END]", style=solid]
 "19R9d" [label="R9", fillcolor=5, shape=diamond, style=filled]
  19 -> "19R17d" [label="[END]", style=solid]
 "19R17d" [label="R17", fillcolor=5, shape=diamond, style=filled]
  20 [label="State 20\n\l 10 subroutine_definition: SUB IDENTIFIER . '(' argument ')' statement_list END SUB\l 11                      | SUB IDENTIFIER . END SUB\l"]
  20 -> 36 [style=solid label="END"]
  20 -> 37 [style=solid label="'('"]
  21 [label="State 21\n\l 31 expression: IDENTIFIER EQUAL . expression\l"]
  21 -> 3 [style=solid label="NUMBER"]
  21 -> 7 [style=solid label="IDENTIFIER"]
  21 -> 8 [style=solid label="FUNC"]
  21 -> 11 [style=solid label="'('"]
  21 -> 38 [style=dashed label="expression"]
  22 [label="State 22\n\l 33 expression: IDENTIFIER '(' . expression_list ')'\l"]
  22 -> 3 [style=solid label="NUMBER"]
  22 -> 7 [style=solid label="IDENTIFIER"]
  22 -> 8 [style=solid label="FUNC"]
  22 -> 11 [style=solid label="'('"]
  22 -> 39 [style=dashed label="expression"]
  22 -> 40 [style=dashed label="expression_list"]
  23 [label="State 23\n\l 32 expression: FUNC '(' . expression_list ')'\l"]
  23 -> 3 [style=solid label="NUMBER"]
  23 -> 7 [style=solid label="IDENTIFIER"]
  23 -> 8 [style=solid label="FUNC"]
  23 -> 11 [style=solid label="'('"]
  23 -> 39 [style=dashed label="expression"]
  23 -> 41 [style=dashed label="expression_list"]
  24 [label="State 24\n\l 12 statement: IF expression . THEN statement_list\l 13          | IF expression . THEN statement_list ELSE statement_list\l 24 expression: expression . PLUS expression\l 25           | expression . MINUS expression\l 26           | expression . AST expression\l 27           | expression . SLASH expression\l"]
  24 -> 42 [style=solid label="THEN"]
  24 -> 28 [style=solid label="PLUS"]
  24 -> 29 [style=solid label="MINUS"]
  24 -> 30 [style=solid label="SLASH"]
  24 -> 31 [style=solid label="AST"]
  25 [label="State 25\n\l 14 statement: WHILE expression . DO statement_list\l 24 expression: expression . PLUS expression\l 25           | expression . MINUS expression\l 26           | expression . AST expression\l 27           | expression . SLASH expression\l"]
  25 -> 43 [style=solid label="DO"]
  25 -> 28 [style=solid label="PLUS"]
  25 -> 29 [style=solid label="MINUS"]
  25 -> 30 [style=solid label="SLASH"]
  25 -> 31 [style=solid label="AST"]
  26 [label="State 26\n\l 24 expression: expression . PLUS expression\l 25           | expression . MINUS expression\l 26           | expression . AST expression\l 27           | expression . SLASH expression\l 28           | '(' expression . ')'\l"]
  26 -> 28 [style=solid label="PLUS"]
  26 -> 29 [style=solid label="MINUS"]
  26 -> 30 [style=solid label="SLASH"]
  26 -> 31 [style=solid label="AST"]
  26 -> 44 [style=solid label="')'"]
  27 [label="State 27\n\l 18 statement_list: statement statement_list .\l"]
  27 -> "27R18" [style=solid]
 "27R18" [label="R18", fillcolor=3, shape=diamond, style=filled]
  28 [label="State 28\n\l 24 expression: expression PLUS . expression\l"]
  28 -> 3 [style=solid label="NUMBER"]
  28 -> 7 [style=solid label="IDENTIFIER"]
  28 -> 8 [style=solid label="FUNC"]
  28 -> 11 [style=solid label="'('"]
  28 -> 45 [style=dashed label="expression"]
  29 [label="State 29\n\l 25 expression: expression MINUS . expression\l"]
  29 -> 3 [style=solid label="NUMBER"]
  29 -> 7 [style=solid label="IDENTIFIER"]
  29 -> 8 [style=solid label="FUNC"]
  29 -> 11 [style=solid label="'('"]
  29 -> 46 [style=dashed label="expression"]
  30 [label="State 30\n\l 27 expression: expression SLASH . expression\l"]
  30 -> 3 [style=solid label="NUMBER"]
  30 -> 7 [style=solid label="IDENTIFIER"]
  30 -> 8 [style=solid label="FUNC"]
  30 -> 11 [style=solid label="'('"]
  30 -> 47 [style=dashed label="expression"]
  31 [label="State 31\n\l 26 expression: expression AST . expression\l"]
  31 -> 3 [style=solid label="NUMBER"]
  31 -> 7 [style=solid label="IDENTIFIER"]
  31 -> 8 [style=solid label="FUNC"]
  31 -> 11 [style=solid label="'('"]
  31 -> 48 [style=dashed label="expression"]
  32 [label="State 32\n\l 19 variable_declaration: DIM IDENTIFIER EQUAL . numberlist\l 20                     | DIM IDENTIFIER EQUAL . expression\l"]
  32 -> 49 [style=solid label="NUMBER"]
  32 -> 7 [style=solid label="IDENTIFIER"]
  32 -> 8 [style=solid label="FUNC"]
  32 -> 11 [style=solid label="'('"]
  32 -> 50 [style=dashed label="numberlist"]
  32 -> 51 [style=dashed label="expression"]
  33 [label="State 33\n\l  8 module_declaration: MODULE IDENTIFIER END . MODULE\l"]
  33 -> 52 [style=solid label="MODULE"]
  34 [label="State 34\n\l  6 module_declaration: MODULE IDENTIFIER subroutine_definition . END MODULE\l"]
  34 -> 53 [style=solid label="END"]
  35 [label="State 35\n\l  7 module_declaration: MODULE IDENTIFIER statement_list . END MODULE\l"]
  35 -> 54 [style=solid label="END"]
  36 [label="State 36\n\l 11 subroutine_definition: SUB IDENTIFIER END . SUB\l"]
  36 -> 55 [style=solid label="SUB"]
  37 [label="State 37\n\l 10 subroutine_definition: SUB IDENTIFIER '(' . argument ')' statement_list END SUB\l"]
  37 -> 56 [style=solid label="DIM"]
  37 -> 57 [style=solid label="IDENTIFIER"]
  37 -> 58 [style=dashed label="argument"]
  37 -> "37R34" [style=solid]
 "37R34" [label="R34", fillcolor=3, shape=diamond, style=filled]
  38 [label="State 38\n\l 24 expression: expression . PLUS expression\l 25           | expression . MINUS expression\l 26           | expression . AST expression\l 27           | expression . SLASH expression\l 31           | IDENTIFIER EQUAL expression .\l"]
  38 -> 28 [style=solid label="PLUS"]
  38 -> 29 [style=solid label="MINUS"]
  38 -> 30 [style=solid label="SLASH"]
  38 -> 31 [style=solid label="AST"]
  38 -> "38R31" [style=solid]
 "38R31" [label="R31", fillcolor=3, shape=diamond, style=filled]
  39 [label="State 39\n\l 24 expression: expression . PLUS expression\l 25           | expression . MINUS expression\l 26           | expression . AST expression\l 27           | expression . SLASH expression\l 40 expression_list: expression .\l 41                | expression . ',' expression_list\l"]
  39 -> 28 [style=solid label="PLUS"]
  39 -> 29 [style=solid label="MINUS"]
  39 -> 30 [style=solid label="SLASH"]
  39 -> 31 [style=solid label="AST"]
  39 -> 59 [style=solid label="','"]
  39 -> "39R40" [style=solid]
 "39R40" [label="R40", fillcolor=3, shape=diamond, style=filled]
  40 [label="State 40\n\l 33 expression: IDENTIFIER '(' expression_list . ')'\l"]
  40 -> 60 [style=solid label="')'"]
  41 [label="State 41\n\l 32 expression: FUNC '(' expression_list . ')'\l"]
  41 -> 61 [style=solid label="')'"]
  42 [label="State 42\n\l 12 statement: IF expression THEN . statement_list\l 13          | IF expression THEN . statement_list ELSE statement_list\l"]
  42 -> 3 [style=solid label="NUMBER"]
  42 -> 4 [style=solid label="DIM"]
  42 -> 7 [style=solid label="IDENTIFIER"]
  42 -> 8 [style=solid label="FUNC"]
  42 -> 9 [style=solid label="IF"]
  42 -> 10 [style=solid label="WHILE"]
  42 -> 11 [style=solid label="'('"]
  42 -> 14 [style=dashed label="statement"]
  42 -> 62 [style=dashed label="statement_list"]
  42 -> 16 [style=dashed label="variable_declaration"]
  42 -> 17 [style=dashed label="expression"]
  42 -> "42R17d" [label="[NUMBER, DIM, IDENTIFIER, FUNC, IF, WHILE, '(']", style=solid]
 "42R17d" [label="R17", fillcolor=5, shape=diamond, style=filled]
  42 -> "42R17" [style=solid]
 "42R17" [label="R17", fillcolor=3, shape=diamond, style=filled]
  43 [label="State 43\n\l 14 statement: WHILE expression DO . statement_list\l"]
  43 -> 3 [style=solid label="NUMBER"]
  43 -> 4 [style=solid label="DIM"]
  43 -> 7 [style=solid label="IDENTIFIER"]
  43 -> 8 [style=solid label="FUNC"]
  43 -> 9 [style=solid label="IF"]
  43 -> 10 [style=solid label="WHILE"]
  43 -> 11 [style=solid label="'('"]
  43 -> 14 [style=dashed label="statement"]
  43 -> 63 [style=dashed label="statement_list"]
  43 -> 16 [style=dashed label="variable_declaration"]
  43 -> 17 [style=dashed label="expression"]
  43 -> "43R17d" [label="[NUMBER, DIM, IDENTIFIER, FUNC, IF, WHILE, '(']", style=solid]
 "43R17d" [label="R17", fillcolor=5, shape=diamond, style=filled]
  43 -> "43R17" [style=solid]
 "43R17" [label="R17", fillcolor=3, shape=diamond, style=filled]
  44 [label="State 44\n\l 28 expression: '(' expression ')' .\l"]
  44 -> "44R28" [style=solid]
 "44R28" [label="R28", fillcolor=3, shape=diamond, style=filled]
  45 [label="State 45\n\l 24 expression: expression . PLUS expression\l 24           | expression PLUS expression .\l 25           | expression . MINUS expression\l 26           | expression . AST expression\l 27           | expression . SLASH expression\l"]
  45 -> 30 [style=solid label="SLASH"]
  45 -> 31 [style=solid label="AST"]
  45 -> "45R24" [style=solid]
 "45R24" [label="R24", fillcolor=3, shape=diamond, style=filled]
  46 [label="State 46\n\l 24 expression: expression . PLUS expression\l 25           | expression . MINUS expression\l 25           | expression MINUS expression .\l 26           | expression . AST expression\l 27           | expression . SLASH expression\l"]
  46 -> 30 [style=solid label="SLASH"]
  46 -> 31 [style=solid label="AST"]
  46 -> "46R25" [style=solid]
 "46R25" [label="R25", fillcolor=3, shape=diamond, style=filled]
  47 [label="State 47\n\l 24 expression: expression . PLUS expression\l 25           | expression . MINUS expression\l 26           | expression . AST expression\l 27           | expression . SLASH expression\l 27           | expression SLASH expression .\l"]
  47 -> "47R27" [style=solid]
 "47R27" [label="R27", fillcolor=3, shape=diamond, style=filled]
  48 [label="State 48\n\l 24 expression: expression . PLUS expression\l 25           | expression . MINUS expression\l 26           | expression . AST expression\l 26           | expression AST expression .\l 27           | expression . SLASH expression\l"]
  48 -> "48R26" [style=solid]
 "48R26" [label="R26", fillcolor=3, shape=diamond, style=filled]
  49 [label="State 49\n\l 22 numberlist: NUMBER .\l 29 expression: NUMBER .\l"]
  49 -> "49R22" [style=solid]
 "49R22" [label="R22", fillcolor=3, shape=diamond, style=filled]
  49 -> "49R29d" [label="[$end, NUMBER, DIM, MODULE, END, SUB, IDENTIFIER, FUNC, IF, ELSE, WHILE, '(']", style=solid]
 "49R29d" [label="R29", fillcolor=5, shape=diamond, style=filled]
  49 -> "49R29" [label="[PLUS, MINUS, SLASH, AST]", style=solid]
 "49R29" [label="R29", fillcolor=3, shape=diamond, style=filled]
  50 [label="State 50\n\l 19 variable_declaration: DIM IDENTIFIER EQUAL numberlist .\l 23 numberlist: numberlist . NUMBER\l"]
  50 -> 64 [style=solid label="NUMBER"]
  50 -> "50R19d" [label="[NUMBER]", style=solid]
 "50R19d" [label="R19", fillcolor=5, shape=diamond, style=filled]
  50 -> "50R19" [style=solid]
 "50R19" [label="R19", fillcolor=3, shape=diamond, style=filled]
  51 [label="State 51\n\l 20 variable_declaration: DIM IDENTIFIER EQUAL expression .\l 24 expression: expression . PLUS expression\l 25           | expression . MINUS expression\l 26           | expression . AST expression\l 27           | expression . SLASH expression\l"]
  51 -> 28 [style=solid label="PLUS"]
  51 -> 29 [style=solid label="MINUS"]
  51 -> 30 [style=solid label="SLASH"]
  51 -> 31 [style=solid label="AST"]
  51 -> "51R20" [style=solid]
 "51R20" [label="R20", fillcolor=3, shape=diamond, style=filled]
  52 [label="State 52\n\l  8 module_declaration: MODULE IDENTIFIER END MODULE .\l"]
  52 -> "52R8" [style=solid]
 "52R8" [label="R8", fillcolor=3, shape=diamond, style=filled]
  53 [label="State 53\n\l  6 module_declaration: MODULE IDENTIFIER subroutine_definition END . MODULE\l"]
  53 -> 65 [style=solid label="MODULE"]
  54 [label="State 54\n\l  7 module_declaration: MODULE IDENTIFIER statement_list END . MODULE\l"]
  54 -> 66 [style=solid label="MODULE"]
  55 [label="State 55\n\l 11 subroutine_definition: SUB IDENTIFIER END SUB .\l"]
  55 -> "55R11" [style=solid]
 "55R11" [label="R11", fillcolor=3, shape=diamond, style=filled]
  56 [label="State 56\n\l 35 argument: DIM . IDENTIFIER AS DATATYPE EQUAL expression\l 36         | DIM . IDENTIFIER EQUAL expression\l 37         | DIM . IDENTIFIER\l"]
  56 -> 67 [style=solid label="IDENTIFIER"]
  57 [label="State 57\n\l 38 argument: IDENTIFIER . EQUAL expression\l 39         | IDENTIFIER .\l"]
  57 -> 68 [style=solid label="EQUAL"]
  57 -> "57R39" [style=solid]
 "57R39" [label="R39", fillcolor=3, shape=diamond, style=filled]
  58 [label="State 58\n\l 10 subroutine_definition: SUB IDENTIFIER '(' argument . ')' statement_list END SUB\l"]
  58 -> 69 [style=solid label="')'"]
  59 [label="State 59\n\l 41 expression_list: expression ',' . expression_list\l"]
  59 -> 3 [style=solid label="NUMBER"]
  59 -> 7 [style=solid label="IDENTIFIER"]
  59 -> 8 [style=solid label="FUNC"]
  59 -> 11 [style=solid label="'('"]
  59 -> 39 [style=dashed label="expression"]
  59 -> 70 [style=dashed label="expression_list"]
  60 [label="State 60\n\l 33 expression: IDENTIFIER '(' expression_list ')' .\l"]
  60 -> "60R33" [style=solid]
 "60R33" [label="R33", fillcolor=3, shape=diamond, style=filled]
  61 [label="State 61\n\l 32 expression: FUNC '(' expression_list ')' .\l"]
  61 -> "61R32" [style=solid]
 "61R32" [label="R32", fillcolor=3, shape=diamond, style=filled]
  62 [label="State 62\n\l 12 statement: IF expression THEN statement_list .\l 13          | IF expression THEN statement_list . ELSE statement_list\l"]
  62 -> 71 [style=solid label="ELSE"]
  62 -> "62R12d" [label="[ELSE]", style=solid]
 "62R12d" [label="R12", fillcolor=5, shape=diamond, style=filled]
  62 -> "62R12" [style=solid]
 "62R12" [label="R12", fillcolor=3, shape=diamond, style=filled]
  63 [label="State 63\n\l 14 statement: WHILE expression DO statement_list .\l"]
  63 -> "63R14" [style=solid]
 "63R14" [label="R14", fillcolor=3, shape=diamond, style=filled]
  64 [label="State 64\n\l 23 numberlist: numberlist NUMBER .\l"]
  64 -> "64R23" [style=solid]
 "64R23" [label="R23", fillcolor=3, shape=diamond, style=filled]
  65 [label="State 65\n\l  6 module_declaration: MODULE IDENTIFIER subroutine_definition END MODULE .\l"]
  65 -> "65R6" [style=solid]
 "65R6" [label="R6", fillcolor=3, shape=diamond, style=filled]
  66 [label="State 66\n\l  7 module_declaration: MODULE IDENTIFIER statement_list END MODULE .\l"]
  66 -> "66R7" [style=solid]
 "66R7" [label="R7", fillcolor=3, shape=diamond, style=filled]
  67 [label="State 67\n\l 35 argument: DIM IDENTIFIER . AS DATATYPE EQUAL expression\l 36         | DIM IDENTIFIER . EQUAL expression\l 37         | DIM IDENTIFIER .\l"]
  67 -> 72 [style=solid label="AS"]
  67 -> 73 [style=solid label="EQUAL"]
  67 -> "67R37" [style=solid]
 "67R37" [label="R37", fillcolor=3, shape=diamond, style=filled]
  68 [label="State 68\n\l 38 argument: IDENTIFIER EQUAL . expression\l"]
  68 -> 3 [style=solid label="NUMBER"]
  68 -> 7 [style=solid label="IDENTIFIER"]
  68 -> 8 [style=solid label="FUNC"]
  68 -> 11 [style=solid label="'('"]
  68 -> 74 [style=dashed label="expression"]
  69 [label="State 69\n\l 10 subroutine_definition: SUB IDENTIFIER '(' argument ')' . statement_list END SUB\l"]
  69 -> 3 [style=solid label="NUMBER"]
  69 -> 4 [style=solid label="DIM"]
  69 -> 7 [style=solid label="IDENTIFIER"]
  69 -> 8 [style=solid label="FUNC"]
  69 -> 9 [style=solid label="IF"]
  69 -> 10 [style=solid label="WHILE"]
  69 -> 11 [style=solid label="'('"]
  69 -> 14 [style=dashed label="statement"]
  69 -> 75 [style=dashed label="statement_list"]
  69 -> 16 [style=dashed label="variable_declaration"]
  69 -> 17 [style=dashed label="expression"]
  69 -> "69R17" [style=solid]
 "69R17" [label="R17", fillcolor=3, shape=diamond, style=filled]
  70 [label="State 70\n\l 41 expression_list: expression ',' expression_list .\l"]
  70 -> "70R41" [style=solid]
 "70R41" [label="R41", fillcolor=3, shape=diamond, style=filled]
  71 [label="State 71\n\l 13 statement: IF expression THEN statement_list ELSE . statement_list\l"]
  71 -> 3 [style=solid label="NUMBER"]
  71 -> 4 [style=solid label="DIM"]
  71 -> 7 [style=solid label="IDENTIFIER"]
  71 -> 8 [style=solid label="FUNC"]
  71 -> 9 [style=solid label="IF"]
  71 -> 10 [style=solid label="WHILE"]
  71 -> 11 [style=solid label="'('"]
  71 -> 14 [style=dashed label="statement"]
  71 -> 76 [style=dashed label="statement_list"]
  71 -> 16 [style=dashed label="variable_declaration"]
  71 -> 17 [style=dashed label="expression"]
  71 -> "71R17d" [label="[NUMBER, DIM, IDENTIFIER, FUNC, IF, WHILE, '(']", style=solid]
 "71R17d" [label="R17", fillcolor=5, shape=diamond, style=filled]
  71 -> "71R17" [style=solid]
 "71R17" [label="R17", fillcolor=3, shape=diamond, style=filled]
  72 [label="State 72\n\l 35 argument: DIM IDENTIFIER AS . DATATYPE EQUAL expression\l"]
  72 -> 77 [style=solid label="DATATYPE"]
  73 [label="State 73\n\l 36 argument: DIM IDENTIFIER EQUAL . expression\l"]
  73 -> 3 [style=solid label="NUMBER"]
  73 -> 7 [style=solid label="IDENTIFIER"]
  73 -> 8 [style=solid label="FUNC"]
  73 -> 11 [style=solid label="'('"]
  73 -> 78 [style=dashed label="expression"]
  74 [label="State 74\n\l 24 expression: expression . PLUS expression\l 25           | expression . MINUS expression\l 26           | expression . AST expression\l 27           | expression . SLASH expression\l 38 argument: IDENTIFIER EQUAL expression .\l"]
  74 -> 28 [style=solid label="PLUS"]
  74 -> 29 [style=solid label="MINUS"]
  74 -> 30 [style=solid label="SLASH"]
  74 -> 31 [style=solid label="AST"]
  74 -> "74R38" [style=solid]
 "74R38" [label="R38", fillcolor=3, shape=diamond, style=filled]
  75 [label="State 75\n\l 10 subroutine_definition: SUB IDENTIFIER '(' argument ')' statement_list . END SUB\l"]
  75 -> 79 [style=solid label="END"]
  76 [label="State 76\n\l 13 statement: IF expression THEN statement_list ELSE statement_list .\l"]
  76 -> "76R13" [style=solid]
 "76R13" [label="R13", fillcolor=3, shape=diamond, style=filled]
  77 [label="State 77\n\l 35 argument: DIM IDENTIFIER AS DATATYPE . EQUAL expression\l"]
  77 -> 80 [style=solid label="EQUAL"]
  78 [label="State 78\n\l 24 expression: expression . PLUS expression\l 25           | expression . MINUS expression\l 26           | expression . AST expression\l 27           | expression . SLASH expression\l 36 argument: DIM IDENTIFIER EQUAL expression .\l"]
  78 -> 28 [style=solid label="PLUS"]
  78 -> 29 [style=solid label="MINUS"]
  78 -> 30 [style=solid label="SLASH"]
  78 -> 31 [style=solid label="AST"]
  78 -> "78R36" [style=solid]
 "78R36" [label="R36", fillcolor=3, shape=diamond, style=filled]
  79 [label="State 79\n\l 10 subroutine_definition: SUB IDENTIFIER '(' argument ')' statement_list END . SUB\l"]
  79 -> 81 [style=solid label="SUB"]
  80 [label="State 80\n\l 35 argument: DIM IDENTIFIER AS DATATYPE EQUAL . expression\l"]
  80 -> 3 [style=solid label="NUMBER"]
  80 -> 7 [style=solid label="IDENTIFIER"]
  80 -> 8 [style=solid label="FUNC"]
  80 -> 11 [style=solid label="'('"]
  80 -> 82 [style=dashed label="expression"]
  81 [label="State 81\n\l 10 subroutine_definition: SUB IDENTIFIER '(' argument ')' statement_list END SUB .\l"]
  81 -> "81R10" [style=solid]
 "81R10" [label="R10", fillcolor=3, shape=diamond, style=filled]
  82 [label="State 82\n\l 24 expression: expression . PLUS expression\l 25           | expression . MINUS expression\l 26           | expression . AST expression\l 27           | expression . SLASH expression\l 35 argument: DIM IDENTIFIER AS DATATYPE EQUAL expression .\l"]
  82 -> 28 [style=solid label="PLUS"]
  82 -> 29 [style=solid label="MINUS"]
  82 -> 30 [style=solid label="SLASH"]
  82 -> 31 [style=solid label="AST"]
  82 -> "82R35" [style=solid]
 "82R35" [label="R35", fillcolor=3, shape=diamond, style=filled]
}
